---
version: '2.4'


services:


  db:
    image: mongo:4.2
    init: true
    restart: always
    networks:
      - ope
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    volumes:
      - ope_db_data:/data/db


  mongo_express:
    image: mongo-express
    restart: always
    environment:
      - ME_CONFIG_MONGODB_SERVER=$MONGODB_HOST
      - ME_CONFIG_MONGODB_PORT=$MONGODB_PORT
      - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGODB_USER
      - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGODB_PASSWORD
    networks:
      - ope
    depends_on:
      - db


  proxy:
    image: nginx:1.17-alpine
    restart: on-failure
    volumes:
      - ./proxy/nginx.dev.conf:/etc/nginx/nginx.conf
    networks:
      - ope
    ports:
      - 9000:8080


  back:
    image: ope-dev:latest
    command: ["yarn", "workspace", "@ope/back", "run", "start"]
    init: true
    restart: on-failure
    environment:
      - MONGODB_HOST
      - MONGODB_PORT
      - MONGODB_DB
      - MONGODB_USER
      - MONGODB_PASSWORD
      - ALLOWED_ORIGINS=localhost
    volumes:
      - .:/app:cached
    networks:
      - ope
    depends_on:
      - db


  front:
    image: ope-dev:latest
    command: ["yarn", "workspace", "@ope/front", "run", "start"]
    init: true
    stdin_open: true  # see https://github.com/facebook/create-react-app/issues/8688
    restart: on-failure
    volumes:
      - .:/app:cached
    networks:
      - ope
    depends_on:
      - back


networks:
  ope:
    name: ope


volumes:
  ope_db_data:
    name: ope_db_data
  yarn_cache:
    name: ope_yarn_cache
